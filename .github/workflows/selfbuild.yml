name: Self-Build

on:
  pull_request:

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      cargo-quickinstall-version: ${{ steps.get-version.outputs.cargo-quickinstall-version }}
      cargo-deny-version: ${{ steps.get-version.outputs.cargo-deny-version }}
    steps:
      - name: Get latest version
        id: get-version
        run: |
          set -euxo pipefail
          for crate in cargo-quickinstall cargo-deny; do 
              echo "${crate}-version"=$(
                curl \
                  --user-agent "cargo-quickinstall build pipeline (alsuren@gmail.com)" \
                  --fail "https://crates.io/api/v1/crates/$crate" \
                  | jq -r '.crate|.max_stable_version'
              ) >> "$GITHUB_OUTPUT"
          done

  self-build-with-build-version:
    needs: get-version
    name: Self-Build-With-build-version
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        include:
          - target_arch: x86_64-pc-windows-msvc
            os: windows-latest
          - target_arch: aarch64-pc-windows-msvc
            os: windows-latest
          - target_arch: x86_64-apple-darwin
            os: macos-14
          - target_arch: aarch64-apple-darwin
            os: macos-14
          - target_arch: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target_arch: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target_arch: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target_arch: aarch64-unknown-linux-musl
            os: ubuntu-latest
          - target_arch: armv7-unknown-linux-gnueabihf
            os: ubuntu-latest
          - target_arch: armv7-unknown-linux-musleabihf
            os: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: ./.github/actions/build-version
        with:
          crate: cargo-quickinstall
          features: ""
          no_default_features: ""
          target_arch: ${{ matrix.target_arch }}
          version: ${{ needs.get-version.outputs.cargo-quickinstall-version }}

  self-build:
    name: Self-Build
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        include:
          - target_arch: x86_64-pc-windows-msvc
            os: windows-latest
          - target_arch: x86_64-apple-darwin
            os: macos-14
          - target_arch: aarch64-apple-darwin
            os: macos-14
          - target_arch: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target_arch: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target_arch: aarch64-unknown-linux-gnu
            os: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install latest rust
        run: rustup toolchain install stable --no-self-update --profile minimal
      - name: Install Thyself
        run: cargo install --path cargo-quickinstall
      - name: Install Thyself with Thyself (or fallback to sensei on windows)
        run: cargo quickinstall cargo-quickinstall || cargo quickinstall sensei

  build-needing-cc:
    needs: get-version
    name: Build package that needs CC
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        include:
          - target_arch: x86_64-pc-windows-msvc
            os: windows-latest
          - target_arch: armv7-unknown-linux-gnueabihf
            os: ubuntu-latest
          - target_arch: armv7-unknown-linux-musleabihf
            os: ubuntu-latest
          - target_arch: x86_64-apple-darwin
            os: macos-14
          - target_arch: aarch64-apple-darwin
            os: macos-14
          - target_arch: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target_arch: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target_arch: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target_arch: aarch64-unknown-linux-musl
            os: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      # FIXME: find a package that needs a working CC but doesn't take quite so long to build.
      - uses: ./.github/actions/build-version
        with:
          crate: cargo-deny
          features: ""
          no_default_features: ""
          target_arch: ${{ matrix.target_arch }}
          version: ${{ needs.get-version.outputs.cargo-deny-version }}

  build-package-test:
    name: Build package test
    uses: ./.github/workflows/build-package.yml
    secrets: inherit
    with:
      crate: cargo-quickinstall
      version: 0.2.9
      target_arch: x86_64-unknown-linux-gnu
      build_os: ubuntu-latest
      branch: ${{ github.head_ref }}
      always_build: 1
      skip_upload: true
